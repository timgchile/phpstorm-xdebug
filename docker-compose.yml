version: "3.8"
services:
  traefik:
    image: "traefik:v2.4"
    command:
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      api:
        ipv4_address: 111.111.111.100
  api:
    build:
      context: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.me.com`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.services.api.loadbalancer.server.port=80"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=OPTIONS,GET,POST,PUT,DELETE"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=Content-Type,Authorization,live,LIVE"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.routers.api.middlewares=cors@docker"
    extra_hosts:
      - api.me.com:111.111.111.100
      - host.docker.internal:172.17.0.1
    networks:
      api: null
    depends_on:
      - traefik
    volumes:
      - ~/.composer:/root/.composer:rw
      - .:/var/www:rw
    entrypoint:
      - tail
    command:
      - "-f"
      - "/var/log/faillog"
networks:
  api:
    driver: bridge
    ipam:
      config:
        - subnet: 111.111.111.0/24
